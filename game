covy cv;
Bear [] li;
Bear il2;
int delay =0, goal =0;

void setup() {
  size(1000, 500);
  cv = new covy();
  li = new Bear[5];
  il2 = new Bear(300, 400, 4);
  for (int i = 0; i<5; i++) {
    li[i] = new Bear();
  }
}
void spaceship(float x, float y, float r) {
  strokeWeight(1);
  fill(90, 90, 255);
  circle(x, y, r*10);
  fill(250, 250, 0);
  circle(x+r*4.5, y+r*4, r*3);
  circle(x-r*4.5, y+r*4, r*3);
  circle(x, y+r*4.5, r*3);
  fill(100, 100, 100);
  ellipse(x, y+r*2.5, r*15, r*5);
}

void showSuccess() {
  goal--;
  fill(0, 0, 250);
  textSize(100);
  text("Succcess\nGood Bye!", 500, 200);
  textAlign(CENTER);
}

void fail() {
  delay --;
  fill(250, 0, 0);
  textSize(100);
  text("Failed...", 510, 280);
  textAlign(CENTER);
}
void draw() {
  square(100, 70, 200);
  background(30, 30, 70);
  spaceship(100, 70, 13);
  if (delay != 0)    fail();
  else if (goal != 0) showSuccess();

  cv.covy_show();
  il2.update();
  il2.show();


  for (int i =0; i<5; i++) {
    li[i].update();
    li[i].show();
    if (delay == 0)   delay = cv.fail(li[i]);
    if (goal == 0)  goal = cv.escape();
  }
}
void keyPressed() {
  cv.covy_keyMove();
}
